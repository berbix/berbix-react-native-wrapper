version: 2.1

orbs:
  android: circleci/android@1.0.3

executors:
  default:
    docker:
      - image: cimg/node:12.22.7
    working_directory: ~/project
  ios:
    macos:
      xcode: 13.0.0
    working_directory: ~/project
  android:
    docker:
      - image: cimg/android:2021.10.2-node
    working_directory: ~/project

commands:
  attach_project:
    steps:
      - attach_workspace:
          at: ~/project

jobs:
  install-dependencies:
    executor: default
    steps:
      - checkout
      - attach_project
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-
      - restore_cache:
          keys:
            - dependencies-example-{{ checksum "example/package.json" }}
            - dependencies-example-
      - run:
          name: Install dependencies
          command: |
            yarn install --cwd example --frozen-lockfile
            yarn install --frozen-lockfile
      - save_cache:
          key: dependencies-{{ checksum "package.json" }}
          paths: node_modules
      - save_cache:
          key: dependencies-example-{{ checksum "example/package.json" }}
          paths: example/node_modules
      - persist_to_workspace:
          root: .
          paths: .

  lint:
    executor: default
    steps:
      - attach_project
      - run:
          name: Lint files
          command: |
            yarn lint

  typescript:
    executor: default
    steps:
      - attach_project
      - run:
          name: Typecheck files
          command: |
            yarn typescript

  unit-tests:
    executor: default
    steps:
      - attach_project
      - run:
          name: Run unit tests
          command: |
            yarn test --coverage
      - store_artifacts:
          path: coverage
          destination: coverage

  build-ios-example:
    executor: ios
    steps:
      - attach_project
      - run:
          name: Build iOS Example
          command: |
            cd example/ios
            pod install
            xcodebuild -workspace example.xcworkspace -sdk iphonesimulator -configuration Release -scheme example

  build-android-example:
    executor: android
    steps:
      - attach_project
      - android/create-avd:
          avd-name: reactavd
          system-image: system-images;android-29;default;x86
          install: true
      - android/disable-animations
      # By default, after starting up the emulator, a cache will be restored,
      # "./gradlew assembleDebugAndroidTest" will be run and then a script
      # will be run to wait for the emulator to start up.
      # Specify the "post-emulator-launch-assemble-command" command to override
      # the gradle command run, or set "wait-for-emulator" to false to disable
      # waiting for the emulator altogether.
      - android/start-emulator:
          avd-name: reactavd
          no-window: true
          restore-gradle-cache-prefix: v1a
      - android/wait-for-emulator
      # Runs "./gradlew connectedDebugAndroidTest" by default.
      # Specify the "test-command" parameter to customize the command run.
      - android/run-tests
      - android/save-gradle-cache:
          cache-prefix: v1a
      - run:
          name: Build Android Example
          command: |
            cd example
            npm run release-android

workflows:
  build-and-test:
    jobs:
      - install-dependencies
      - lint:
          requires:
            - install-dependencies
      - typescript:
          requires:
            - install-dependencies
      - unit-tests:
          requires:
            - install-dependencies
      - build-ios-example:
          requires:
            - install-dependencies
      - build-android-example:
          requires:
            - install-dependencies
